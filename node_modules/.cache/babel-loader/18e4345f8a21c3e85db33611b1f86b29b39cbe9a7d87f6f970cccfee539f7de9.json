{"ast":null,"code":"// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../resource.mjs\";\nimport { isRequestOptions } from \"../../../core.mjs\";\nimport { CursorPage } from \"../../../pagination.mjs\";\nexport class OutputItems extends APIResource {\n  /**\n   * Get an evaluation run output item by ID.\n   */\n  retrieve(evalId, runId, outputItemId, options) {\n    return this._client.get(`/evals/${evalId}/runs/${runId}/output_items/${outputItemId}`, options);\n  }\n  list(evalId, runId, query = {}, options) {\n    if (isRequestOptions(query)) {\n      return this.list(evalId, runId, {}, query);\n    }\n    return this._client.getAPIList(`/evals/${evalId}/runs/${runId}/output_items`, OutputItemListResponsesPage, {\n      query,\n      ...options\n    });\n  }\n}\nexport class OutputItemListResponsesPage extends CursorPage {}\nOutputItems.OutputItemListResponsesPage = OutputItemListResponsesPage;","map":{"version":3,"names":["APIResource","isRequestOptions","CursorPage","OutputItems","retrieve","evalId","runId","outputItemId","options","_client","get","list","query","getAPIList","OutputItemListResponsesPage"],"sources":["/Users/tato/repo/github/tatoflam/logo-generator-app/node_modules/openai/src/resources/evals/runs/output-items.ts"],"sourcesContent":["// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../../../resource';\nimport { isRequestOptions } from '../../../core';\nimport * as Core from '../../../core';\nimport * as RunsAPI from './runs';\nimport { CursorPage, type CursorPageParams } from '../../../pagination';\n\nexport class OutputItems extends APIResource {\n  /**\n   * Get an evaluation run output item by ID.\n   */\n  retrieve(\n    evalId: string,\n    runId: string,\n    outputItemId: string,\n    options?: Core.RequestOptions,\n  ): Core.APIPromise<OutputItemRetrieveResponse> {\n    return this._client.get(`/evals/${evalId}/runs/${runId}/output_items/${outputItemId}`, options);\n  }\n\n  /**\n   * Get a list of output items for an evaluation run.\n   */\n  list(\n    evalId: string,\n    runId: string,\n    query?: OutputItemListParams,\n    options?: Core.RequestOptions,\n  ): Core.PagePromise<OutputItemListResponsesPage, OutputItemListResponse>;\n  list(\n    evalId: string,\n    runId: string,\n    options?: Core.RequestOptions,\n  ): Core.PagePromise<OutputItemListResponsesPage, OutputItemListResponse>;\n  list(\n    evalId: string,\n    runId: string,\n    query: OutputItemListParams | Core.RequestOptions = {},\n    options?: Core.RequestOptions,\n  ): Core.PagePromise<OutputItemListResponsesPage, OutputItemListResponse> {\n    if (isRequestOptions(query)) {\n      return this.list(evalId, runId, {}, query);\n    }\n    return this._client.getAPIList(\n      `/evals/${evalId}/runs/${runId}/output_items`,\n      OutputItemListResponsesPage,\n      { query, ...options },\n    );\n  }\n}\n\nexport class OutputItemListResponsesPage extends CursorPage<OutputItemListResponse> {}\n\n/**\n * A schema representing an evaluation run output item.\n */\nexport interface OutputItemRetrieveResponse {\n  /**\n   * Unique identifier for the evaluation run output item.\n   */\n  id: string;\n\n  /**\n   * Unix timestamp (in seconds) when the evaluation run was created.\n   */\n  created_at: number;\n\n  /**\n   * Details of the input data source item.\n   */\n  datasource_item: Record<string, unknown>;\n\n  /**\n   * The identifier for the data source item.\n   */\n  datasource_item_id: number;\n\n  /**\n   * The identifier of the evaluation group.\n   */\n  eval_id: string;\n\n  /**\n   * The type of the object. Always \"eval.run.output_item\".\n   */\n  object: 'eval.run.output_item';\n\n  /**\n   * A list of results from the evaluation run.\n   */\n  results: Array<Record<string, unknown>>;\n\n  /**\n   * The identifier of the evaluation run associated with this output item.\n   */\n  run_id: string;\n\n  /**\n   * A sample containing the input and output of the evaluation run.\n   */\n  sample: OutputItemRetrieveResponse.Sample;\n\n  /**\n   * The status of the evaluation run.\n   */\n  status: string;\n}\n\nexport namespace OutputItemRetrieveResponse {\n  /**\n   * A sample containing the input and output of the evaluation run.\n   */\n  export interface Sample {\n    /**\n     * An object representing an error response from the Eval API.\n     */\n    error: RunsAPI.EvalAPIError;\n\n    /**\n     * The reason why the sample generation was finished.\n     */\n    finish_reason: string;\n\n    /**\n     * An array of input messages.\n     */\n    input: Array<Sample.Input>;\n\n    /**\n     * The maximum number of tokens allowed for completion.\n     */\n    max_completion_tokens: number;\n\n    /**\n     * The model used for generating the sample.\n     */\n    model: string;\n\n    /**\n     * An array of output messages.\n     */\n    output: Array<Sample.Output>;\n\n    /**\n     * The seed used for generating the sample.\n     */\n    seed: number;\n\n    /**\n     * The sampling temperature used.\n     */\n    temperature: number;\n\n    /**\n     * The top_p value used for sampling.\n     */\n    top_p: number;\n\n    /**\n     * Token usage details for the sample.\n     */\n    usage: Sample.Usage;\n  }\n\n  export namespace Sample {\n    /**\n     * An input message.\n     */\n    export interface Input {\n      /**\n       * The content of the message.\n       */\n      content: string;\n\n      /**\n       * The role of the message sender (e.g., system, user, developer).\n       */\n      role: string;\n    }\n\n    export interface Output {\n      /**\n       * The content of the message.\n       */\n      content?: string;\n\n      /**\n       * The role of the message (e.g. \"system\", \"assistant\", \"user\").\n       */\n      role?: string;\n    }\n\n    /**\n     * Token usage details for the sample.\n     */\n    export interface Usage {\n      /**\n       * The number of tokens retrieved from cache.\n       */\n      cached_tokens: number;\n\n      /**\n       * The number of completion tokens generated.\n       */\n      completion_tokens: number;\n\n      /**\n       * The number of prompt tokens used.\n       */\n      prompt_tokens: number;\n\n      /**\n       * The total number of tokens used.\n       */\n      total_tokens: number;\n    }\n  }\n}\n\n/**\n * A schema representing an evaluation run output item.\n */\nexport interface OutputItemListResponse {\n  /**\n   * Unique identifier for the evaluation run output item.\n   */\n  id: string;\n\n  /**\n   * Unix timestamp (in seconds) when the evaluation run was created.\n   */\n  created_at: number;\n\n  /**\n   * Details of the input data source item.\n   */\n  datasource_item: Record<string, unknown>;\n\n  /**\n   * The identifier for the data source item.\n   */\n  datasource_item_id: number;\n\n  /**\n   * The identifier of the evaluation group.\n   */\n  eval_id: string;\n\n  /**\n   * The type of the object. Always \"eval.run.output_item\".\n   */\n  object: 'eval.run.output_item';\n\n  /**\n   * A list of results from the evaluation run.\n   */\n  results: Array<Record<string, unknown>>;\n\n  /**\n   * The identifier of the evaluation run associated with this output item.\n   */\n  run_id: string;\n\n  /**\n   * A sample containing the input and output of the evaluation run.\n   */\n  sample: OutputItemListResponse.Sample;\n\n  /**\n   * The status of the evaluation run.\n   */\n  status: string;\n}\n\nexport namespace OutputItemListResponse {\n  /**\n   * A sample containing the input and output of the evaluation run.\n   */\n  export interface Sample {\n    /**\n     * An object representing an error response from the Eval API.\n     */\n    error: RunsAPI.EvalAPIError;\n\n    /**\n     * The reason why the sample generation was finished.\n     */\n    finish_reason: string;\n\n    /**\n     * An array of input messages.\n     */\n    input: Array<Sample.Input>;\n\n    /**\n     * The maximum number of tokens allowed for completion.\n     */\n    max_completion_tokens: number;\n\n    /**\n     * The model used for generating the sample.\n     */\n    model: string;\n\n    /**\n     * An array of output messages.\n     */\n    output: Array<Sample.Output>;\n\n    /**\n     * The seed used for generating the sample.\n     */\n    seed: number;\n\n    /**\n     * The sampling temperature used.\n     */\n    temperature: number;\n\n    /**\n     * The top_p value used for sampling.\n     */\n    top_p: number;\n\n    /**\n     * Token usage details for the sample.\n     */\n    usage: Sample.Usage;\n  }\n\n  export namespace Sample {\n    /**\n     * An input message.\n     */\n    export interface Input {\n      /**\n       * The content of the message.\n       */\n      content: string;\n\n      /**\n       * The role of the message sender (e.g., system, user, developer).\n       */\n      role: string;\n    }\n\n    export interface Output {\n      /**\n       * The content of the message.\n       */\n      content?: string;\n\n      /**\n       * The role of the message (e.g. \"system\", \"assistant\", \"user\").\n       */\n      role?: string;\n    }\n\n    /**\n     * Token usage details for the sample.\n     */\n    export interface Usage {\n      /**\n       * The number of tokens retrieved from cache.\n       */\n      cached_tokens: number;\n\n      /**\n       * The number of completion tokens generated.\n       */\n      completion_tokens: number;\n\n      /**\n       * The number of prompt tokens used.\n       */\n      prompt_tokens: number;\n\n      /**\n       * The total number of tokens used.\n       */\n      total_tokens: number;\n    }\n  }\n}\n\nexport interface OutputItemListParams extends CursorPageParams {\n  /**\n   * Sort order for output items by timestamp. Use `asc` for ascending order or\n   * `desc` for descending order. Defaults to `asc`.\n   */\n  order?: 'asc' | 'desc';\n\n  /**\n   * Filter output items by status. Use `failed` to filter by failed output items or\n   * `pass` to filter by passed output items.\n   */\n  status?: 'fail' | 'pass';\n}\n\nOutputItems.OutputItemListResponsesPage = OutputItemListResponsesPage;\n\nexport declare namespace OutputItems {\n  export {\n    type OutputItemRetrieveResponse as OutputItemRetrieveResponse,\n    type OutputItemListResponse as OutputItemListResponse,\n    OutputItemListResponsesPage as OutputItemListResponsesPage,\n    type OutputItemListParams as OutputItemListParams,\n  };\n}\n"],"mappings":"AAAA;SAESA,WAAW,QAAE;SACbC,gBAAgB,QAAE;SAGlBC,UAAU,QAAyB;AAE5C,OAAM,MAAOC,WAAY,SAAQH,WAAW;EAC1C;;;EAGAI,QAAQA,CACNC,MAAc,EACdC,KAAa,EACbC,YAAoB,EACpBC,OAA6B;IAE7B,OAAO,IAAI,CAACC,OAAO,CAACC,GAAG,CAAC,UAAUL,MAAM,SAASC,KAAK,iBAAiBC,YAAY,EAAE,EAAEC,OAAO,CAAC;EACjG;EAgBAG,IAAIA,CACFN,MAAc,EACdC,KAAa,EACbM,KAAA,GAAoD,EAAE,EACtDJ,OAA6B;IAE7B,IAAIP,gBAAgB,CAACW,KAAK,CAAC,EAAE;MAC3B,OAAO,IAAI,CAACD,IAAI,CAACN,MAAM,EAAEC,KAAK,EAAE,EAAE,EAAEM,KAAK,CAAC;;IAE5C,OAAO,IAAI,CAACH,OAAO,CAACI,UAAU,CAC5B,UAAUR,MAAM,SAASC,KAAK,eAAe,EAC7CQ,2BAA2B,EAC3B;MAAEF,KAAK;MAAE,GAAGJ;IAAO,CAAE,CACtB;EACH;;AAGF,OAAM,MAAOM,2BAA4B,SAAQZ,UAAkC;AA4VnFC,WAAW,CAACW,2BAA2B,GAAGA,2BAA2B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}